spring:
  datasource:
    druid:
      master:
        driver-class-name: com.mysql.cj.jdbc.Driver
        # 主数据源，默认的
        type: com.alibaba.druid.pool.DruidDataSource
        url: jdbc:mysql://47.111.250.3:3306/turtle?characterEncoding=utf-8&useSSL=false&serverTimezone=UTC
        username: root
        password: 123456
      slave:
        driver-class-name: com.mysql.cj.jdbc.Driver
        type: com.alibaba.druid.pool.DruidDataSource
        url: jdbc:mysql://47.111.250.3:3306/sys?characterEncoding=utf-8&useSSL=false&serverTimezone=UTC
        username: root
        password: 123456
      # 下面为连接池的补充设置，应用到上面所有数据源中
      # 初始化大小，最小，最大
      initialSize: 5
      minIdle: 5
      maxActive: 20
      # 配置获取连接等待超时的时间
      maxWait: 60000
      # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
      timeBetweenEvictionRunsMillis: 60000
      # 配置一个连接在池中最小生存的时间，单位是毫秒
      minEvictableIdleTimeMillis: 300000
      validationQuery: SELECT 1 FROM DUAL
      testWhileIdle: true
      testOnBorrow: false
      testOnReturn: false
      # 打开PSCache，并且指定每个连接上PSCache的大小
      poolPreparedStatements: true
      maxPoolPreparedStatementPerConnectionSize: 25
      # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
      filters: stat,wall,logback
      # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
      connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=500
      # 合并多个DruidDataSource的监控数据
      useGlobalDataSourceStat: true
    #RabbitMq
  cloud:
#    nacos:
#      discovery:
#        server-addr: 121.43.184.44:8848
    alibaba:
      seata:
        tx-service-group: tblog-fescar-service-group
  rabbitmq:
    host: 123.206.217.166
    port: 5672
    username: guest
    password: Ljy123456789
    ## Redis 配置
  redis:
    host: 47.111.250.3
    port: 6379
    timeout: 1000
  servlet:
    multipart:
      enabled: true
      # 最大文件大小
      max-file-size: 200MB
      # 最大请求大小
      max-request-size: 215MB
      # 文件写入磁盘的阈值
      file-size-threshold: 2KB
management:
  endpoints:
    web:
      exposure:
        include: "*"
mybatis-plus:
  mapper-locations: classpath:mapper/*.xml
  global-config:
    db-config:
      logic-delete-value: 0
      logic-not-delete-value: 1
#web请求日志
logbook:
  format:
    style: curl

#日志级别
logging:
  level:
    root: info
    org.zalando.logbook: TRACE
    com.turtle: TRACE
server:
  port: 8088
  servlet:
    context-path: /v1
eureka:
  client:
    serviceUrl: #注册中心的注册地址
      defaultZone: http://47.111.250.3:8081/eureka/
  instance:
    prefer-ip-address: true
    instance-id: ${spring.cloud.client.ip-address}:${server.port}
##jwt
tokenHead: bearer
tokenHeader: Authorization
rememberMeExpiresSecond: 259200
audience:
  clientId: 31caa0168d3d456ca0f6b05952122fdb
  base64Secret: MzFjYWEwMTY4ZDNkNDU2Y2EwZjZiMDU5NTIxMjJmZGI=
  name: turtle
  expiresSecond: 3600

# 是否启用httpclient
feign:
  httpclient:
    enabled: false
# 请求连接超时时间（毫秒）
    connection-timeout: 3000
# 是否启用httpok（性能比httpclient高）
  okhttp:
    enabled: true
# 是否启用hystrix
  hystrix:
    enabled: false
  compression:
    request:
      enabled: true
    response:
      enabled: true
#
#seata:
#  enabled: true
#  application-id: admin
#  tx-service-group: tblog_seata_group
#  service:
#    grouplist:
##      default: 121.43.184.44:8091
#      default: 127.0.0.1:8091
#    vgroup-mapping:
#      tblog_seata_group: default

swagger:
  ebable: true

#七牛云
accessKey: bY3OIgJyJkBCzxzC3FMEi8EjQaIHB9V3AliVpOdg
secretKey: d3vP1EwKnwN_HeED088SoVdHGYUEtsw33RlJNPLJ
bucket: lijiayupic
CDN: http://res.lijiayu.vip/

#顶象
appHeader: CodeToken
appId: f779bcf183706417df081bbaa920d435
appSecret: 2251cf3f011339a43fb81cc7192ec498