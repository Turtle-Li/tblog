spring:
  datasource:
    druid:
      master:
        driver-class-name: com.mysql.cj.jdbc.Driver
        # 主数据源，默认的
        type: com.alibaba.druid.pool.DruidDataSource
        url: jdbc:mysql://47.111.250.3:3306/turtle?characterEncoding=utf-8&useSSL=false&serverTimezone=UTC
        username: root
        password: 123456
      slave:
        driver-class-name: com.mysql.cj.jdbc.Driver
        type: com.alibaba.druid.pool.DruidDataSource
        url: jdbc:mysql://47.111.250.3:3306/sys?characterEncoding=utf-8&useSSL=false&serverTimezone=UTC
        username: root
        password: 123456
      # 下面为连接池的补充设置，应用到上面所有数据源中
      # 初始化大小，最小，最大
      initialSize: 5
      minIdle: 5
      maxActive: 20
      # 配置获取连接等待超时的时间
      maxWait: 60000
      # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
      timeBetweenEvictionRunsMillis: 60000
      # 配置一个连接在池中最小生存的时间，单位是毫秒
      minEvictableIdleTimeMillis: 300000
      validationQuery: SELECT 1 FROM DUAL
      testWhileIdle: true
      testOnBorrow: false
      testOnReturn: false
      # 打开PSCache，并且指定每个连接上PSCache的大小
      poolPreparedStatements: true
      maxPoolPreparedStatementPerConnectionSize: 25
      # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
      filters: stat,wall,logback
      # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
      connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=500
      # 合并多个DruidDataSource的监控数据
      useGlobalDataSourceStat: true
  #RabbitMq
  rabbitmq:
    host: 123.206.217.166
    port: 5672
    username: guest
    password: Ljy123456789
  redis:
    host: 47.111.250.3
    port: 6379
    timeout: 1000
  #mail
  mail:
    userName: turtle_blog@163.com
    password: turtle123456
    host: smtp.163.com

    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
            required: true
          ssl:
            enable: true
  cloud:
    alibaba:
      seata:
        tx-service-group: tblog-fescar-service-group
eureka:
  client:
    serviceUrl: #注册中心的注册地址
      defaultZone: http://47.111.250.3:8081/eureka/
  instance:
    ip-address: 121.43.184.44
    prefer-ip-address: true
    instance-id: ${spring.cloud.client.ip-address}:${spring.application.name}:${server.port}
swagger:
  enable: false
server:
  port: 8060